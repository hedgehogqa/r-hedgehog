% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/property.R
\name{forall}
\alias{forall}
\title{Hedgehog property test}
\usage{
forall(generator, property, tests = 100, size = 10, shrink.limit = 1000)
}
\arguments{
\item{generator}{a generator or list of generators
(potentially nested) to use for value testing.}

\item{property}{a function which takes a value from
from the generator and tests some predicated against
it.}

\item{tests}{the number of tests to run}

\item{size}{the max size used for the generators}

\item{shrink.limit}{the maximum number of shrinks to
run when shrinking a value to find the smallest
counterexample.}
}
\description{
Check a property holds for all generated values.
}
\details{
The generator used can be defined flexibly, in that
one can pass in a list of generators, or even nest
generators and constant values deeply into the gen
argument and the whole construct will be treated
as a generator.
}
\examples{
forall (
  list ( a = vec( gen.sample(1:100))
       , b = vec(gen.sample(1:100))
       )
  , function(x) {
      identical ( c(rev(x$b), rev(x$a)), rev( c(x$a, x$b )))
    }
)
# TRUE

# False example showing minimum shrink:
forall ( vec( gen.sample(1:100)), function(x) { identical ( rev(x), x ) } )
# Falsifiable after 1 tests, and 5 shrinks
# Predicate is falsifiable

# Counterexample:
# [1] 1 2

}

