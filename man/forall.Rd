% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/property.R
\name{forall}
\alias{forall}
\title{Hedgehog property test}
\usage{
forall(generator, property, tests = 100, size = 10, shrink.limit = 1000,
  curry = identical(class(generator), "list"))
}
\arguments{
\item{generator}{a generator or list of generators
(potentially nested) to use for value testing.}

\item{property}{a function which takes a value from
from the generator and tests some predicated against
it.}

\item{tests}{the number of tests to run}

\item{size}{the max size used for the generators}

\item{shrink.limit}{the maximum number of shrinks to
run when shrinking a value to find the smallest
counterexample.}

\item{curry}{whether to curry the arguments passed
to the property, and use do.call to use the list
generated as individual arguments.}
}
\description{
Check a property holds for all generated values.
}
\details{
The generator used can be defined flexibly, in that
one can pass in a list of generators, or even nest
generators and constant values deeply into the gen
argument and the whole construct will be treated
as a generator.
}
\examples{
forall( list( as = gen.c( gen.sample(1:100) )
            , bs = gen.c( gen.sample(1:100) ))
      , function( as, bs )
          identical ( rev(c(as, bs)), c(rev(bs), rev(as)))
)
# TRUE

# False example showing minimum shrink:
forall ( gen.c( gen.sample(1:100)), function(x) { identical ( rev(x), x ) } )
# Falsifiable after 1 tests, and 5 shrinks
# Predicate is falsifiable

# Counterexample:
# [1] 1 2

}

